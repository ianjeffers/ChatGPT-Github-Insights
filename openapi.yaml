openapi: 3.0.1
info:
  title: GitHub Repo Info Plugin
  description: A plugin that allows the user to fetch GitHub repository information and file contents using ChatGPT.
  version: 'v1'
servers:
  - url: http://localhost:5003
paths:
  /commit_history/{username}/{repo_name}:
    get:
      operationId: commitHistory
      summary: Get the commit history of a GitHub repository
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CommitHistory'
  /query_similar_code:
    post:
      operationId: querySimilarCode
      summary: Query similar code snippets in the repository
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code_snippet:
                  type: string
                  description: The code snippet to find similar snippets to.
                top_k:
                  type: integer
                  description: The number of similar snippets to return. If not provided, defaults to 10.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSimilarityResults'
  /search_code:
    get:
      operationId: searchCode
      summary: Search for code within the user's GitHub repositories
      parameters:
      - in: query
        name: query
        schema:
            type: string
        required: true
        description: The search query to look for code.
      - in: query
        name: repo_name
        schema:
            type: string
        required: false
        description: The name of the Github repository to search within.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CodeSearchResults'
  /create_issue/{username}/{repo_name}:
    post:
      operationId: createIssue
      summary: Create an issue on a GitHub repository
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                  description: The title of the issue.
                body:
                  type: string
                  description: The body text of the issue.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IssueInfo'
  /repository_info/{username}/{repo_name}:
    get:
      operationId: getRepositoryInfo
      summary: Get repository information
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RepositoryInfo'
  /repository_file_contents/{username}/{repo_name}/{file_path}:
    get:
      operationId: getRepositoryFileContents
      summary: Get the contents of a file in the repository
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository
      - in: path
        name: file_path
        schema:
            type: string
        required: true
        description: The path of the file within the repository.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileContents'
  /list_repository_directory/{username}/{repo_name}:
    get:
      operationId: listRepositoryDirectoryWithoutFilePath
      summary: List the contents of the repository (root directory)
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryContents'
  /list_repository_directory/{username}/{repo_name}/{file_path}:
    get:
      operationId: listRepositoryDirectoryWithFilePath
      summary: List the contents of the repository (specified directory)
      parameters:
      - in: path
        name: username
        schema:
            type: string
        required: true
        description: The username of the repository owner.
      - in: path
        name: repo_name
        schema:
            type: string
        required: true
        description: The name of the Github repository.
      - in: path
        name: file_path
        schema:
            type: string
        required: true
        description: The path of the file within the repository.
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryContents'
  /generate_auth_url:
    get:
      operationId: generateAuthURL
      summary: Generate a unique URL for user authentication
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  auth_url:
                    type: string
                    description: The unique URL for user authentication.

components:
  schemas:
    RepositoryInfo:
      type: object
      properties:
        name:
          type: string
          description: The name of the repository.
        owner:
          type: string
          description: The owner of the repository.
        description:
          type: string
          description: A brief description of the repository.
        stars:
          type: integer
          description: The number of stars the repository has received.
        forks:
          type: integer
          description: The number of times the repository has been forked.
    FileContents:
      type: object
      properties:
        content:
          type: string
          description: The contents of the file in the repository. If you specify a file path (optional parameter), it will return the file contents
    DirectoryContents:
      type: array
      items:
        type: object
        properties:
          name:
            type: string
            description: The name of the file or directory
          path:
            type: string
            description: The path of the file or directory within the repository
          type:
            type: string
            description: The type of the item (file or dir)
          size:
            type: integer
            description: The size of the file in bytes (only applicable for files).
    AuthUrl:
      type: object
      properties:
        content:
          type: string
          description: The Auth URL that the user needs so that we can access their github repos
    IssueInfo:
      type: object
      properties:
        number:
          type: integer
          description: The issue number.
        title:
          type: string
          description: The title of the issue.
        state:
          type: string
          description: The state of the issue (open or closed).
    CodeSearchResults:
      type: object
      properties:
        total_count:
          type: integer
          description: The total number of search results.
        items:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: The name of the file.
              path:
                type: string
                description: The path of the file within the repository.
              url:
                type: string
                description: The URL of the file on GitHub.
    CommitHistory:
      type: array
      items:
        type: object
        properties:
          sha:
            type: string
            description: The commit hash.
          commit:
            type: object
            properties:
              author:
                type: object
                properties:
                  name:
                    type: string
                    description: The author's name.
                  email:
                    type: string
                    description: The author's email.
                  date:
                    type: string
                    format: date-time
                    description: The date and time the commit was authored.
              message:
                type: string
                description: The commit message.
          url:
            type: string
            description: The URL of the commit on GitHub.
    CodeSimilarityResults:
      type: array
      items:
        type: object
        properties:
          code_id:
            type: string
            description: The id of the similar code snippet.
          code_snippet:
            type: string
            description: The similar code snippet.